#!/usr/bin/env ruby
#  SubtitleIt
#
#  Created on 2008-9-4.
#  Copyright (c) 2008. All rights reserved.
#
begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'optparse'
require 'subtitle_it'

include SubtitleIt

OPTIONS = {
  :force    => false,
  :format   => nil,
  :delay    => nil
}
MANDATORY_OPTIONS = %w(  )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
SubtitleIt - Download, convert and create subtitles.

Usage: #{File.basename($0)} [options] movie or file_in [file_out]

Options are:
  -c FORMAT --convert=FORMAT  Format to convert. Use this empty to
        show all supported formats.  You don`t need to use this if 
        fileout contains a extension.
  
  -f  --force     Force overwrite.
       
  -d DELAY --delay=DELAY  Fix the delay of the file.
  
  -h  --help      Show this.
  
  -v  --version   Program version.
BANNER
  opts.separator ""

  opts.on("-c", "--convert=FORMAT", String,
          "Format to convert to") { |OPTIONS[:format]| }
          
  opts.on("-d", "--delay=DELAY", Float,
          "Delay to add/remove") { |OPTIONS[:delay]| }
          
  opts.on("-f", "--force", "Force overwrite") { OPTIONS[:force] = true }          
          
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }          
          
  opts.on("-v", "--version",
          "Show program version") {   puts "SubtitleIt v#{SubtitleIt::VERSION::STRING}"; exit }          
          
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

if ARGV.empty?
  puts parser.banner
  exit
else
  SubtitleIt::Bin.run! ARGV, OPTIONS[:format], OPTIONS[:force], OPTIONS[:delay]
end

